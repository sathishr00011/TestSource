<Activity mc:Ignorable="sap" x:Class="TfsBuild.Process" this:Process.BuildSettings="[New Microsoft.TeamFoundation.Build.Workflow.Activities.BuildSettings()]" this:Process.TestSpecs="[New Microsoft.TeamFoundation.Build.Workflow.Activities.TestSpecList(New Microsoft.TeamFoundation.Build.Workflow.Activities.TestAssemblySpec(&quot;**\*test*.dll&quot;))]" this:Process.BuildNumberFormat="[&quot;$(BuildDefinitionName)_$(Date:yyyyMMdd)$(Rev:.r)&quot;]" this:Process.CleanWorkspace="[Microsoft.TeamFoundation.Build.Workflow.Activities.CleanWorkspaceOption.All]" this:Process.RunCodeAnalysis="[Microsoft.TeamFoundation.Build.Workflow.Activities.CodeAnalysisOption.AsConfigured]" this:Process.SourceAndSymbolServerSettings="[New Microsoft.TeamFoundation.Build.Workflow.Activities.SourceAndSymbolServerSettings(True, Nothing)]" this:Process.AgentSettings="[New Microsoft.TeamFoundation.Build.Workflow.Activities.AgentSettings(New System.TimeSpan(4, 0, 0), New System.TimeSpan(0, 0, 0))]" this:Process.AssociateChangesetsAndWorkItems="[True]" this:Process.CreateWorkItem="[True]" this:Process.DropBuild="[True]" this:Process.MSBuildPlatform="[Microsoft.TeamFoundation.Build.Workflow.Activities.ToolPlatform.Auto]" this:Process.PerformTestImpactAnalysis="[True]" this:Process.CreateLabel="[True]" this:Process.DisableTests="[False]" this:Process.Verbosity="[Microsoft.TeamFoundation.Build.Workflow.BuildVerbosity.Normal]" this:Process.SupportedReasons="All" this:Process.ExcludeIntegrationTests="True" this:Process.PublishLatestPackagesPath="\\UKINT80APIAP23v\BuildOutput\Latest" this:Process.PublishLatestFilterExpressions="[CStr(&quot;*.msi *.config *Manifest*.xml&quot;)]" this:Process.StyleCopSettingsPath="\Main\Main\Tesco\Com\Lib\StyleCop 4.7\Settings.StyleCop" this:Process.FailBuildOnStyleCopError="False" this:Process.TreatViolationsErrorsAsWarnings="True" this:Process.PublishNuGetPackages="True" this:Process.PublishNuGetFilterExpressions="[CStr(&quot; *.Contracts.dll *.Providers.Common.dll&quot;)]" this:Process.NuGetPackageIconUrl="http://ukdbt67apibr01v.dotcom.tesco.org/APINuGetServer/Tesco.png" this:Process.NuGetExePathOnBuildServer="[CStr(&quot;C:\Program Files\NuGet2.5\NuGet.exe&quot;)]" this:Process.NugetServerPackagePath="[CStr(&quot;\\ukdbt67apibr01V\Packages&quot;)]" this:Process.PublishNuGetFilterOptions="[CStr(&quot; /S  /XD NuGet&quot;)]" this:Process.VersionInfoRegexPattern="[CStr(&quot;@version \d+\.\d+&quot;)]" this:Process.DefaultVersion="[CStr(&quot;1.1&quot;)]" this:Process.VersionPattern="[CStr(&quot;$(Version)&quot;)]" this:Process.NugetDependentPackages="[New String() {}]" this:Process.IncludeReleaseName="True" this:Process.OverrideCheckIn="False" this:Process.PerformStrongNaming="True" this:Process.PerformIDLValidation="True" this:Process.PerformIDLUpload="True" this:Process.IDLUploadPath="\\Vdi01t8hsc-038\tapiidls\Queue" this:Process.AllowCheckinOnTestFailure="False" this:Process.EnvironmentServerType="APP_Business" this:Process.ShouldCopyARRScripts="False" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:ba="clr-namespace:BuildTasks.Activities;assembly=Tesco.Com.Api.TFSBuildActivities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mt="clr-namespace:Microsoft.TeamFoundation;assembly=Microsoft.TeamFoundation.Common" xmlns:mtbc="clr-namespace:Microsoft.TeamFoundation.Build.Client;assembly=Microsoft.TeamFoundation.Build.Client" xmlns:mtbc1="clr-namespace:Microsoft.TeamFoundation.Build.Client;assembly=Microsoft.TeamFoundation.Build.Client, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" xmlns:mtbw="clr-namespace:Microsoft.TeamFoundation.Build.Workflow;assembly=Microsoft.TeamFoundation.Build.Workflow" xmlns:mtbw1="clr-namespace:Microsoft.TeamFoundation.Build.Workflow;assembly=Microsoft.TeamFoundation.Build.Workflow, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" xmlns:mtbwa="clr-namespace:Microsoft.TeamFoundation.Build.Workflow.Activities;assembly=Microsoft.TeamFoundation.Build.Workflow" xmlns:mtbwa1="clr-namespace:Microsoft.TeamFoundation.Build.Workflow.Activities;assembly=Microsoft.TeamFoundation.Build.Workflow, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" xmlns:mtbwt="clr-namespace:Microsoft.TeamFoundation.Build.Workflow.Tracking;assembly=Microsoft.TeamFoundation.Build.Workflow" xmlns:mttbb="clr-namespace:Microsoft.TeamFoundation.TestImpact.BuildIntegration.BuildActivities;assembly=Microsoft.TeamFoundation.TestImpact.BuildIntegration" xmlns:mtvc="clr-namespace:Microsoft.TeamFoundation.VersionControl.Client;assembly=Microsoft.TeamFoundation.VersionControl.Client, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" xmlns:mtvc1="clr-namespace:Microsoft.TeamFoundation.VersionControl.Client;assembly=Microsoft.TeamFoundation.VersionControl.Client" xmlns:mtvc2="clr-namespace:Microsoft.TeamFoundation.VersionControl.Common;assembly=Microsoft.TeamFoundation.VersionControl.Common" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:mvc="clr-namespace:Microsoft.VisualBasic.CompilerServices;assembly=Microsoft.VisualBasic" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:s1="clr-namespace:System;assembly=System.Core" xmlns:s2="clr-namespace:System;assembly=System" xmlns:s3="clr-namespace:System;assembly=System.ServiceModel" xmlns:s4="clr-namespace:System;assembly=System.ComponentModel.Composition" xmlns:s5="clr-namespace:System;assembly=Microsoft.VisualStudio.Platform.VSEditor" xmlns:s6="clr-namespace:System;assembly=System.Numerics" xmlns:sa="clr-namespace:System.Activities;assembly=System.Activities" xmlns:sad="clr-namespace:System.Activities.Debugger;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:scg1="clr-namespace:System.Collections.Generic;assembly=System.Core" xmlns:scg2="clr-namespace:System.Collections.Generic;assembly=System" xmlns:scg3="clr-namespace:System.Collections.Generic;assembly=System.ServiceModel" xmlns:si="clr-namespace:System.IO;assembly=System" xmlns:si1="clr-namespace:System.IO;assembly=mscorlib" xmlns:si2="clr-namespace:System.IO;assembly=System.Core" xmlns:si3="clr-namespace:System.IO;assembly=WindowsBase" xmlns:si4="clr-namespace:System.IO;assembly=System.ServiceModel" xmlns:sl="clr-namespace:System.Linq;assembly=System.Core" xmlns:sx="clr-namespace:System.Xml;assembly=System.Xml" xmlns:sx1="clr-namespace:System.Xml;assembly=System.Data" xmlns:sx2="clr-namespace:System.Xml;assembly=System.Runtime.Serialization" xmlns:sxl="clr-namespace:System.Xml.Linq;assembly=System.Xml.Linq" xmlns:sxs="clr-namespace:System.Xml.Serialization;assembly=System.Xml" xmlns:sxx="clr-namespace:System.Xml.XPath;assembly=System.Xml" xmlns:sxx1="clr-namespace:System.Xml.XPath;assembly=System.Xml.Linq" xmlns:tac="clr-namespace:TfsBuildExtensions.Activities.CodeQuality;assembly=TfsBuildExtensions.Activities.StyleCop" xmlns:taf="clr-namespace:TfsBuildExtensions.Activities.FileSystem;assembly=TfsBuildExtensions.Activities" xmlns:taf1="clr-namespace:TfsBuildExtensions.Activities.Framework;assembly=TfsBuildExtensions.Activities" xmlns:tas="clr-namespace:TfsBuildExtensions.Activities.Scripting;assembly=TfsBuildExtensions.Activities" xmlns:tcat="clr-namespace:Tesco.Com.Api.TFSBuildActivities;assembly=Tesco.Com.Api.TFSBuildActivities" xmlns:this="clr-namespace:TfsBuild" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="BuildSettings" Type="InArgument(mtbwa:BuildSettings)" />
    <x:Property Name="TestSpecs" Type="InArgument(mtbwa:TestSpecList)" />
    <x:Property Name="BuildNumberFormat" Type="InArgument(x:String)" />
    <x:Property Name="CleanWorkspace" Type="InArgument(mtbwa:CleanWorkspaceOption)" />
    <x:Property Name="RunCodeAnalysis" Type="InArgument(mtbwa:CodeAnalysisOption)" />
    <x:Property Name="SourceAndSymbolServerSettings" Type="InArgument(mtbwa:SourceAndSymbolServerSettings)" />
    <x:Property Name="AgentSettings" Type="InArgument(mtbwa:AgentSettings)" />
    <x:Property Name="AssociateChangesetsAndWorkItems" Type="InArgument(x:Boolean)" />
    <x:Property Name="CreateWorkItem" Type="InArgument(x:Boolean)" />
    <x:Property Name="DropBuild" Type="InArgument(x:Boolean)" />
    <x:Property Name="MSBuildArguments" Type="InArgument(x:String)" />
    <x:Property Name="MSBuildPlatform" Type="InArgument(mtbwa:ToolPlatform)" />
    <x:Property Name="PerformTestImpactAnalysis" Type="InArgument(x:Boolean)" />
    <x:Property Name="CreateLabel" Type="InArgument(x:Boolean)" />
    <x:Property Name="DisableTests" Type="InArgument(x:Boolean)" />
    <x:Property Name="GetVersion" Type="InArgument(x:String)" />
    <x:Property Name="Verbosity" Type="InArgument(mtbw:BuildVerbosity)" />
    <x:Property Name="Metadata" Type="mtbw:ProcessParameterMetadataCollection" />
    <x:Property Name="SupportedReasons" Type="mtbc:BuildReason" />
    <x:Property Name="DeployToEnvironment" Type="InArgument(x:String)" />
    <x:Property Name="ExcludeIntegrationTests" Type="InArgument(x:Boolean)" />
    <x:Property Name="FileRefCheckinTargetFileName" Type="InArgument(x:String)" />
    <x:Property Name="ManifestFilterExpression" Type="InArgument(x:String)" />
    <x:Property Name="ManifestPackageIdentifier" Type="InArgument(x:String)" />
    <x:Property Name="BranchToBuild" Type="InArgument(x:String)" />
    <x:Property Name="PublishLatestPackagesPath" Type="InArgument(x:String)" />
    <x:Property Name="PublishLatestFilterExpressions" Type="InArgument(x:String)" />
    <x:Property Name="StyleCopSettingsPath" Type="InArgument(x:String)" />
    <x:Property Name="FailBuildOnStyleCopError" Type="InArgument(x:Boolean)" />
    <x:Property Name="TreatViolationsErrorsAsWarnings" Type="InArgument(x:Boolean)" />
    <x:Property Name="PublishNuGetPackages" Type="InArgument(x:Boolean)" />
    <x:Property Name="PublishNuGetFilterExpressions" Type="InArgument(x:String)" />
    <x:Property Name="NuGetPackageIconUrl" Type="InArgument(x:String)" />
    <x:Property Name="NuGetExePathOnBuildServer" Type="InArgument(x:String)" />
    <x:Property Name="NugetServerPackagePath" Type="InArgument(x:String)" />
    <x:Property Name="PublishNuGetFilterOptions" Type="InArgument(x:String)" />
    <x:Property Name="VersionInfoRegexPattern" Type="InArgument(x:String)" />
    <x:Property Name="DefaultVersion" Type="InArgument(x:String)" />
    <x:Property Name="VersionPattern" Type="InArgument(x:String)" />
    <x:Property Name="NugetDependentPackages" Type="InArgument(s:String[])" />
    <x:Property Name="IncludeReleaseName" Type="InArgument(x:Boolean)" />
    <x:Property Name="OverrideCheckIn" Type="InArgument(x:Boolean)" />
    <x:Property Name="PerformStrongNaming" Type="InArgument(x:Boolean)" />
    <x:Property Name="PerformIDLValidation" Type="InArgument(x:Boolean)" />
    <x:Property Name="PerformIDLUpload" Type="InArgument(x:Boolean)" />
    <x:Property Name="IDLUploadPath" Type="InArgument(x:String)" />
    <x:Property Name="AllowCheckinOnTestFailure" Type="InArgument(x:Boolean)" />
    <x:Property Name="EnvironmentServerType" Type="InArgument(x:String)" />
    <x:Property Name="ShouldCopyARRScripts" Type="InArgument(x:Boolean)" />
  </x:Members>
  <this:Process.MSBuildArguments>
    <InArgument x:TypeArguments="x:String" />
  </this:Process.MSBuildArguments>
  <this:Process.GetVersion>
    <InArgument x:TypeArguments="x:String" />
  </this:Process.GetVersion>
  <this:Process.Metadata>
    <mtbw:ProcessParameterMetadataCollection>
      <mtbw:ProcessParameterMetadata BrowsableWhen="Always" Category="Automated Testing" Description="Set to &quot;False&quot; to enable Integration tests to run during the test run." DisplayName="Exclude Integration Tests" ParameterName="ExcludeIntegrationTests" />
      <mtbw:ProcessParameterMetadata BrowsableWhen="Always" Category="Manifest Automation" Description="Use to specify the packages that should be found for the release manifest (e.g. *.msi)" DisplayName="Manifest Filter Expression" ParameterName="ManifestFilterExpression" />
      <mtbw:ProcessParameterMetadata BrowsableWhen="Always" Category="Manifest Automation" Description="E.g. MyApp.Library" DisplayName="Manifest Package Identifier" ParameterName="ManifestPackageIdentifier" />
      <mtbw:ProcessParameterMetadata BrowsableWhen="Always" Category="Manifest Automation" Description="Target Nolio Environment Server Type (APP_SI, APP_Infra, APP_Business)" DisplayName="EnvironmentServerType" ParameterName="EnvironmentServerType" />
      <mtbw:ProcessParameterMetadata BrowsableWhen="Always" Category="Misc" DisplayName="Branch to Build" ParameterName="BranchToBuild" />
      <mtbw:ProcessParameterMetadata BrowsableWhen="Always" Category="Misc" DisplayName="FileRefCheckinTargetFileName" ParameterName="FileRefCheckinTargetFileName" />
      <mtbw:ProcessParameterMetadata BrowsableWhen="Always" Category="Misc" Description="Indicate whether the build should copy over ARR scripts to Latest. Should ideally be used with Infra Build. If True, ensure workspace mappings are set." DisplayName="ShouldCopyARRScripts" ParameterName="ShouldCopyARRScripts" />
      <mtbw:ProcessParameterMetadata BrowsableWhen="Always" Category="Deploy To Latest" DisplayName="PublishLatestPackagesPath" ParameterName="PublishLatestPackagesPath" />
      <mtbw:ProcessParameterMetadata BrowsableWhen="Always" Category="Deploy To Latest" DisplayName="PublishLatestFilterExpressions" ParameterName="PublishLatestFilterExpressions" />
      <mtbw:ProcessParameterMetadata BrowsableWhen="Always" Category="StyleCop" DisplayName="StyleCopSettingsPath" ParameterName="StyleCopSettingsPath" />
      <mtbw:ProcessParameterMetadata BrowsableWhen="Always" Category="StyleCop" DisplayName="FailBuildOnStyleCopError" ParameterName="FailBuildOnStyleCopError" />
      <mtbw:ProcessParameterMetadata BrowsableWhen="Always" Category="StyleCop" DisplayName="TreatViolationsErrorsAsWarnings" ParameterName="TreatViolationsErrorsAsWarnings" />
      <mtbw:ProcessParameterMetadata BrowsableWhen="Always" Category="NuGet Settings" DisplayName="PublishNuGetPackages" ParameterName="PublishNuGetPackages" />
      <mtbw:ProcessParameterMetadata BrowsableWhen="Always" Category="NuGet Settings" DisplayName="PublishNuGetFilterExpressions" ParameterName="PublishNuGetFilterExpressions" />
      <mtbw:ProcessParameterMetadata BrowsableWhen="Always" Category="NuGet Settings" DisplayName="NuGetPackageIconUrl" ParameterName="NuGetPackageIconUrl" />
      <mtbw:ProcessParameterMetadata BrowsableWhen="Always" Category="NuGet Settings" DisplayName="NuGetExePathOnBuildServer" ParameterName="NuGetExePathOnBuildServer" />
      <mtbw:ProcessParameterMetadata BrowsableWhen="Always" Category="NuGet Settings" DisplayName="NugetServerPackagePath" ParameterName="NugetServerPackagePath" />
      <mtbw:ProcessParameterMetadata BrowsableWhen="Always" Category="NuGet Settings" DisplayName="PublishNuGetFilterOptions" ParameterName="PublishNuGetFilterOptions" />
      <mtbw:ProcessParameterMetadata BrowsableWhen="Always" Category="Tesco API Versioning" DisplayName="VersionInfoRegexPattern" ParameterName="VersionInfoRegexPattern" />
      <mtbw:ProcessParameterMetadata BrowsableWhen="Always" Category="Tesco API Versioning" DisplayName="DefaultVersion" ParameterName="DefaultVersion" />
      <mtbw:ProcessParameterMetadata BrowsableWhen="Always" Category="Tesco API Versioning" DisplayName="VersionPattern" ParameterName="VersionPattern" />
      <mtbw:ProcessParameterMetadata BrowsableWhen="Always" Category="NuGet Settings" Description="In every line specify  packagename=version" DisplayName="NugetDependentPackages" ParameterName="NugetDependentPackages" />
      <mtbw:ProcessParameterMetadata BrowsableWhen="Always" Category="NuGet Settings" DisplayName="IncludeReleaseName" ParameterName="IncludeReleaseName" />
      <mtbw:ProcessParameterMetadata BrowsableWhen="Always" Category="NuGet Settings" DisplayName="OverrideCheckIn" ParameterName="OverrideCheckIn" />
      <mtbw:ProcessParameterMetadata BrowsableWhen="Always" Category="Tesco API Versioning" DisplayName="PerformStrongNaming" ParameterName="PerformStrongNaming" />
      <mtbw:ProcessParameterMetadata BrowsableWhen="Always" Category="IDL Validation and Upload to TAPI" DisplayName="PerformIDLValidation" ParameterName="PerformIDLValidation" />
      <mtbw:ProcessParameterMetadata BrowsableWhen="Always" Category="IDL Validation and Upload to TAPI" DisplayName="PerformIDLUpload" ParameterName="PerformIDLUpload" />
      <mtbw:ProcessParameterMetadata BrowsableWhen="Always" Category="IDL Validation and Upload to TAPI" DisplayName="IDLUploadPath" ParameterName="IDLUploadPath" />
      <mtbw:ProcessParameterMetadata BrowsableWhen="Always" Category="Misc" DisplayName="AllowCheckinOnTestFailure" ParameterName="AllowCheckinOnTestFailure" />
    </mtbw:ProcessParameterMetadataCollection>
  </this:Process.Metadata>
  <sap:VirtualizedContainerService.HintSize>548,1835</sap:VirtualizedContainerService.HintSize>
  <mva:VisualBasic.Settings>Assembly references and imported namespaces serialized as XML namespaces</mva:VisualBasic.Settings>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldCollapseAll">True</x:Boolean>
      <x:Boolean x:Key="ShouldExpandAll">False</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Sequence DisplayName="Overall Build Process" sad:XamlDebuggerXmlReader.FileName="C:\Users\jv37\Documents\Visual Studio 2010\Projects\WpfApplication1\WpfApplication1\PostBuildCheckinProcessTemplate_Manifest_Nuget.xaml" sap:VirtualizedContainerService.HintSize="508,1795" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces">
    <Sequence.Variables>
      <Variable x:TypeArguments="mtbc:IBuildDetail" Name="BuildDetail" />
      <Variable x:TypeArguments="scg:IEnumerable(x:String)" Name="FilesForManifest" />
      <Variable x:TypeArguments="x:String" Name="BuildVersion" />
      <Variable x:TypeArguments="x:String" Name="AssemblyVersion" />
      <Variable x:TypeArguments="scg:IEnumerable(x:String)" Name="ManifestsCollection" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="486,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[String.Format(&quot;*** This build will be deployed to {0} ***&quot;, DeployToEnvironment)]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
    <mtbwa:GetBuildDetail DisplayName="Get the Build" sap:VirtualizedContainerService.HintSize="486,22" Result="[BuildDetail]" />
    <Sequence DisplayName="Update Drop Location" sap:VirtualizedContainerService.HintSize="486,49">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="customVersionNumber" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <mtbwa:InvokeForReason DisplayName="Update Build Number for Triggered Builds" sap:VirtualizedContainerService.HintSize="222,270">
        <tcat:GetAssemblyVersion BuildDetail="[BuildDetail]" DefaultVersion="[DefaultVersion]" DisplayName="Get AssemblyVersion From IDL" sap:VirtualizedContainerService.HintSize="200,22" Result="[customVersionNumber]" VersionInfoRegexPattern="[VersionInfoRegexPattern]" />
        <ba:UpdateVersionInBuildNumber BuildNumberFormat="[BuildNumberFormat]" sap:VirtualizedContainerService.HintSize="200,22" Result="[BuildNumberFormat]" VersionNumber="[customVersionNumber]" VersionPattern="[VersionPattern]" />
        <mtbwa:UpdateBuildNumber BuildNumberFormat="[BuildNumberFormat]" DisplayName="Update Build Number" sap:VirtualizedContainerService.HintSize="200,22" />
      </mtbwa:InvokeForReason>
      <mtbwa:SetBuildProperties DisplayName="Set Drop Location" DropLocation="[BuildDetail.DropLocationRoot + &quot;\&quot; + BuildDetail.BuildDefinition.Name + &quot;\&quot; + BuildDetail.BuildNumber]" sap:VirtualizedContainerService.HintSize="222,22" PropertiesToSet="DropLocation" />
      <mtbwa:CreateDirectory Directory="[BuildDetail.DropLocation]" DisplayName="Create the Drop Location" sap:VirtualizedContainerService.HintSize="222,22" />
    </Sequence>
    <mtbwa:AgentScope DisplayName="Run On Agent" sap:VirtualizedContainerService.HintSize="486,915" MaxExecutionTime="[AgentSettings.MaxExecutionTime]" MaxWaitTime="[AgentSettings.MaxWaitTime]" ReservationSpec="[AgentSettings.GetAgentReservationSpec()]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces">
      <mtbwa:AgentScope.Variables>
        <Variable x:TypeArguments="mtbc:IBuildAgent" Name="BuildAgent" />
        <Variable x:TypeArguments="mtvc1:Workspace" Name="Workspace" />
        <Variable x:TypeArguments="x:String" Name="BuildDirectory" />
        <Variable x:TypeArguments="x:String" Default="[BuildDetail.BuildNumber]" Name="LabelName" />
        <Variable x:TypeArguments="x:String" Name="WorkspaceName" />
        <Variable x:TypeArguments="x:String" Name="SourcesDirectory" />
        <Variable x:TypeArguments="x:String" Name="BinariesDirectory" />
        <Variable x:TypeArguments="x:String" Name="TestResultsDirectory" />
        <Variable x:TypeArguments="x:String" Name="localProject" />
        <Variable x:TypeArguments="x:String" Name="outputDirectory" />
      </mtbwa:AgentScope.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsPinned">True</x:Boolean>
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="Initialize Variables" sap:VirtualizedContainerService.HintSize="418,49">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <mtbwa:GetBuildAgent DisplayName="Get the Agent" sap:VirtualizedContainerService.HintSize="200,22" Result="[BuildAgent]" />
        <mtbwa:GetBuildDirectory DisplayName="Get the Build Directory" sap:VirtualizedContainerService.HintSize="200,22" Result="[BuildDirectory]" />
        <Assign x:TypeArguments="x:String" DisplayName="Initialize Workspace Name" sap:VirtualizedContainerService.HintSize="200,22" To="[WorkspaceName]" Value="[String.Format(&quot;{0}_{1}_{2}&quot;, BuildDetail.BuildDefinition.Id, Microsoft.TeamFoundation.LinkingUtilities.DecodeUri(BuildAgent.Uri.AbsoluteUri).ToolSpecificId, BuildAgent.ServiceHost.Name)]" />
        <Assign x:TypeArguments="x:String" DisplayName="Initialize Sources Directory" sap:VirtualizedContainerService.HintSize="200,22" To="[SourcesDirectory]" Value="[String.Format(&quot;{0}\Sources&quot;, BuildDirectory)]" />
        <Assign x:TypeArguments="x:String" DisplayName="Initialize Binaries Directory" sap:VirtualizedContainerService.HintSize="200,22" To="[BinariesDirectory]" Value="[String.Format(&quot;{0}\Binaries&quot;, BuildDirectory)]" />
        <Assign x:TypeArguments="x:String" DisplayName="Initialize TestResults Directory" sap:VirtualizedContainerService.HintSize="200,22" To="[TestResultsDirectory]" Value="[String.Format(&quot;{0}\TestResults&quot;, BuildDirectory)]" />
        <If Condition="[Not BuildSettings.HasPlatformConfigurations]" DisplayName="If Not BuildSettings.HasPlatformConfigurations" sap:VirtualizedContainerService.HintSize="200,49">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <Assign x:TypeArguments="mtbwa:PlatformConfigurationList" DisplayName="Use Default Platform Configuration" sap:VirtualizedContainerService.HintSize="269,100" To="[BuildSettings.PlatformConfigurations]" Value="[Microsoft.TeamFoundation.Build.Workflow.Activities.PlatformConfigurationList.Default]" />
          </If.Then>
        </If>
      </Sequence>
      <Sequence DisplayName="Initialize Workspace" sap:VirtualizedContainerService.HintSize="418,49">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <mtbwa:DeleteDirectory Directory="[TestResultsDirectory]" DisplayName="Delete Test Results Directory" sap:VirtualizedContainerService.HintSize="200,22" Recursive="[True]" />
        <If Condition="[Not CleanWorkspace = Microsoft.TeamFoundation.Build.Workflow.Activities.CleanWorkspaceOption.None]" DisplayName="If Not CleanWorkspace = CleanWorkspaceOption.None" sap:VirtualizedContainerService.HintSize="200,49">
          <If.Then>
            <mtbwa:DeleteDirectory Directory="[BinariesDirectory]" DisplayName="Delete Binaries Directory" sap:VirtualizedContainerService.HintSize="269,100" />
          </If.Then>
        </If>
        <If Condition="[CleanWorkspace = Microsoft.TeamFoundation.Build.Workflow.Activities.CleanWorkspaceOption.All]" DisplayName="If CleanWorkspace = CleanWorkspaceOption.All" sap:VirtualizedContainerService.HintSize="200,49">
          <If.Then>
            <Sequence DisplayName="Delete Workspace and Sources Directory" sap:VirtualizedContainerService.HintSize="281,208">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <mtbwa:DeleteWorkspace DeleteLocalItems="[True]" DisplayName="Delete Workspace" sap:VirtualizedContainerService.HintSize="200,22" Name="[WorkspaceName]" />
              <mtbwa:DeleteDirectory Directory="[SourcesDirectory]" DisplayName="Delete Sources Directory" sap:VirtualizedContainerService.HintSize="200,22" />
            </Sequence>
          </If.Then>
        </If>
        <mtbwa:CreateWorkspace BuildDirectory="[BuildDirectory]" Comment="[&quot;Workspace Created by Team Build&quot;]" DisplayName="Create Workspace" sap:VirtualizedContainerService.HintSize="200,22" Name="[WorkspaceName]" Result="[Workspace]" SourcesDirectory="[SourcesDirectory]" />
        <If Condition="[CleanWorkspace = Microsoft.TeamFoundation.Build.Workflow.Activities.CleanWorkspaceOption.Outputs]" DisplayName="If CleanWorkspace = CleanWorkspaceOption.Outputs" sap:VirtualizedContainerService.HintSize="200,49">
          <If.Then>
            <ForEach x:TypeArguments="mtbwa:PlatformConfiguration" DisplayName="For Each Configuration in BuildSettings.PlatformConfigurations" sap:VirtualizedContainerService.HintSize="693,818" Values="[BuildSettings.PlatformConfigurations]">
              <ActivityAction x:TypeArguments="mtbwa:PlatformConfiguration">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="mtbwa:PlatformConfiguration" Name="platformConfiguration" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Clean Configuration" sap:VirtualizedContainerService.HintSize="663,715">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If Condition="[BuildSettings.HasProjectsToBuild]" DisplayName="If BuildSettings.HasProjectsToBuild" sap:VirtualizedContainerService.HintSize="641,591">
                    <If.Then>
                      <ForEach x:TypeArguments="x:String" DisplayName="For Each Project in BuildSettings.ProjectsToBuild" sap:VirtualizedContainerService.HintSize="516,490" Values="[BuildSettings.ProjectsToBuild]">
                        <ActivityAction x:TypeArguments="x:String">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="x:String" Name="serverBuildProjectItem" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Clean Project" sap:VirtualizedContainerService.HintSize="486,387">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="x:String" Name="localBuildProjectItem" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <mtbwa:ConvertWorkspaceItem DisplayName="Convert Server Paths to Local Paths" sap:VirtualizedContainerService.HintSize="464,22" Input="[serverBuildProjectItem]" Result="[localBuildProjectItem]" Workspace="[Workspace]" />
                            <If Condition="[System.IO.File.Exists(localBuildProjectItem)]" DisplayName="If File.Exists(Project)" sap:VirtualizedContainerService.HintSize="464,201">
                              <If.Then>
                                <mtbwa:MSBuild CommandLineArguments="[String.Format(&quot;/p:SkipInvalidConfigurations=false {0} /p:Env={1}&quot;, MSBuildArguments, DeployToEnvironment)]" Configuration="[platformConfiguration.Configuration]" DisplayName="Run MSBuild for Project" GenerateVSPropsFile="[True]" sap:VirtualizedContainerService.HintSize="269,100" OutDir="[BinariesDirectory]" Platform="[platformConfiguration.Platform]" Project="[localBuildProjectItem]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" Targets="[New String() { &quot;Clean&quot; }]" TargetsNotLogged="[New String() {&quot;GetNativeManifest&quot;, &quot;GetCopyToOutputDirectoryItems&quot;, &quot;GetTargetPath&quot;}]" ToolPlatform="[MSBuildPlatform]" Verbosity="[Verbosity]" />
                              </If.Then>
                            </If>
                          </Sequence>
                        </ActivityAction>
                      </ForEach>
                    </If.Then>
                  </If>
                </Sequence>
              </ActivityAction>
            </ForEach>
          </If.Then>
        </If>
        <mtbwa:SyncWorkspace DisplayName="Get Workspace" sap:VirtualizedContainerService.HintSize="200,22" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" VersionOverride="[GetVersion]" Workspace="[Workspace]" />
      </Sequence>
      <Sequence DisplayName="Validate IDL Files" sap:VirtualizedContainerService.HintSize="418,49">
        <Sequence.Variables>
          <Variable x:TypeArguments="scg:List(x:String)" Name="validatedFiles" />
          <Variable x:TypeArguments="x:Boolean" Name="validateResult" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If Condition="[PerformIDLValidation]" DisplayName="Check &quot;Perform IDL Validation&quot;" sap:VirtualizedContainerService.HintSize="464,201">
          <If.Then>
            <Sequence DisplayName="Perform IDL Validation" sap:VirtualizedContainerService.HintSize="264,394">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="uploadPath" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap:VirtualizedContainerService.HintSize="242,57">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[uploadPath]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[If(PerformIDLUpload, String.Format("-o {0}", IDLUploadPath), String.Empty)]</InArgument>
                </Assign.Value>
              </Assign>
              <tcat:ValidateIDL BuildDetail="[BuildDetail]" sap:VirtualizedContainerService.HintSize="242,22" IDLToolParameters="[String.Format(&quot;-c u {0} -i&quot;, uploadPath)]" IDLToolPath="[String.Format(&quot;{0}\{1}\Tesco\Com\tools\tidluploader\Output\{2}&quot;, SourcesDirectory, BranchToBuild, &quot;tidlutility.exe&quot;)]" IDLToolTimeOutInms="30000" Result="[validateResult]" ValidatedFiles="[validatedFiles]" Workspace="[Workspace]" />
              <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="242,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[validateResult.ToString() + &quot;--&quot; + validatedFiles.Count.ToString()]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
              <If Condition="[validateResult = False]" DisplayName="Check Validation Result" sap:VirtualizedContainerService.HintSize="242,49">
                <If.Then>
                  <Throw Exception="[New Exception(&quot;IDL files are not in right format. TIDL validation failed!&quot;)]" sap:VirtualizedContainerService.HintSize="269,100" />
                </If.Then>
              </If>
            </Sequence>
          </If.Then>
          <If.Else>
            <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="220,100" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[String.Format(&quot;PerformIDLValidation is set to {0}&quot;, PerformIDLValidation.ToString())]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
          </If.Else>
        </If>
      </Sequence>
      <Sequence DisplayName="Update AssemblyInfo.cs Version" sap:VirtualizedContainerService.HintSize="418,49">
        <Sequence.Variables>
          <Variable x:TypeArguments="scg:IEnumerable(x:String)" Name="AssemblyInfoFiles" />
          <Variable x:TypeArguments="x:String" Default="Copyright © Tesco 2013" Name="AssemblyCopyright" />
          <Variable x:TypeArguments="x:String" Default="Tesco" Name="AssemblyCompany" />
          <Variable x:TypeArguments="x:String" Default="[If(PerformStrongNaming, &quot;C:\\Program Files\\TescoAPI\\TescoAPIKey.snk&quot;, String.Empty)]" Name="SNKFilePath" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <tcat:CheckOut AssemblyInfoFileMask="AssemblyInfo.cs" sap:VirtualizedContainerService.HintSize="242,22" Workspace="[Workspace]" />
        <mtbwa:FindMatchingFiles DisplayName="FindAssemblyInfoFiles" sap:VirtualizedContainerService.HintSize="324,22" MatchPattern="[String.Format(&quot;{0}\**\assemblyinfo.cs&quot;, SourcesDirectory)]" Result="[AssemblyInfoFiles]" />
        <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="324,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[String.Format(&quot;Build Number {0} Assemblyinfo.cs Count {1}&quot;, BuildDetail.BuildNumber, AssemblyInfoFiles.ToArray().Length)]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
        <Assign sap:VirtualizedContainerService.HintSize="324,57">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[BuildVersion]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[BuildDetail.BuildNumber.Substring(BuildDetail.BuildNumber.LastIndexOf("_") + 1)]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap:VirtualizedContainerService.HintSize="324,59">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[AssemblyVersion]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String" xml:space="preserve">[String.Format("{0}.{1}.0.0",
              BuildVersion.Split(New Char() {"."c})(0),
              BuildVersion.Split(New Char() {"."c})(1))]</InArgument>
          </Assign.Value>
        </Assign>
        <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="324,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[String.Format(&quot;Version identified {0} to update&quot;, BuildVersion)]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
        <taf1:AssemblyInfo AssemblyConfiguration="{x:Null}" AssemblyCulture="{x:Null}" AssemblyDelaySign="{x:Null}" AssemblyDescription="{x:Null}" AssemblyFileVersions="{x:Null}" AssemblyInformationalVersion="{x:Null}" AssemblyInformationalVersions="{x:Null}" AssemblyKeyName="{x:Null}" AssemblyProduct="{x:Null}" AssemblyTitle="{x:Null}" AssemblyTrademark="{x:Null}" AssemblyVersions="{x:Null}" CLSCompliant="{x:Null}" ComVisible="{x:Null}" FailBuildOnError="{x:Null}" Guid="{x:Null}" IgnoreExceptions="{x:Null}" MaxAssemblyFileVersion="{x:Null}" MaxAssemblyInformationalVersion="{x:Null}" MaxAssemblyVersion="{x:Null}" TreatWarningsAsErrors="{x:Null}" Action="Set" AssemblyCompany="[AssemblyCompany]" AssemblyCopyright="[AssemblyCopyright]" AssemblyFileVersion="[BuildVersion]" AssemblyKeyFile="[SNKFilePath]" AssemblyVersion="[AssemblyVersion]" DisplayName="&quot;Update Version In Assembly Info&quot;" Files="[AssemblyInfoFiles]" sap:VirtualizedContainerService.HintSize="324,22" LogExceptionStack="True" />
        <tcat:CheckIn sap:VirtualizedContainerService.HintSize="242,22" Workspace="[Workspace]" />
      </Sequence>
      <If Condition="[CreateLabel]" DisplayName="If CreateLabel" sap:VirtualizedContainerService.HintSize="418,49">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <mtbwa:InvokeForReason DisplayName="Create and Set Label for non-Shelveset Builds" sap:VirtualizedContainerService.HintSize="281,208" Reason="Manual, IndividualCI, BatchedCI, Schedule, ScheduleForced, UserCreated">
            <mtbwa:LabelSources Child="[Microsoft.TeamFoundation.VersionControl.Client.LabelChildOption.Replace]" Comment="[&quot;Label Created by Team Build&quot;]" DisplayName="Create Label" sap:VirtualizedContainerService.HintSize="200,22" Items="[New String() {&quot;$/&quot;}]" Name="[LabelName]" Recursion="[Microsoft.TeamFoundation.VersionControl.Client.RecursionType.Full]" Scope="[String.Format(&quot;$/{0}&quot;, BuildDetail.BuildDefinition.TeamProject)]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" Version="[String.Format(&quot;W{0}&quot;, Workspace.Name)]" />
            <mtbwa:SetBuildProperties DisplayName="Set Label on BuildDetail" sap:VirtualizedContainerService.HintSize="200,22" LabelName="[String.Format(&quot;{0}@$/{1}&quot;, LabelName, BuildDetail.BuildDefinition.TeamProject)]" PropertiesToSet="LabelName" />
          </mtbwa:InvokeForReason>
        </If.Then>
      </If>
      <TryCatch DisplayName="Try Compile, Test, and Associate Changesets and Work Items" sap:VirtualizedContainerService.HintSize="418,257">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <TryCatch.Finally>
          <Sequence DisplayName="Revert Workspace and Copy Files to Drop Location" sap:VirtualizedContainerService.HintSize="513,1739">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="ManifestLocation" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence DisplayName="Manifest Activities Sequence" sap:VirtualizedContainerService.HintSize="491,964">
              <Sequence.Variables>
                <Variable x:TypeArguments="scg:IEnumerable(x:String)" Name="ComponentsCollection" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Get Manifest Location" sap:VirtualizedContainerService.HintSize="469,57">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[ManifestLocation]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[outputDirectory + "\\Manifests"]</InArgument>
                </Assign.Value>
              </Assign>
              <mtbwa:FindMatchingFiles DisplayName="Find Manifest Files" sap:VirtualizedContainerService.HintSize="469,22" MatchPattern="[System.IO.Path.Combine(ManifestLocation, &quot;*Manifest*.xml&quot;).ToString()]" Result="[ManifestsCollection]" />
              <If Condition="[ManifestsCollection.Count() &gt; 0]" DisplayName="Check if Manifest Files Exist" sap:VirtualizedContainerService.HintSize="469,681">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="244,580">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <mtbwa:FindMatchingFiles DisplayName="Find MSI" sap:VirtualizedContainerService.HintSize="222,22" MatchPattern="[System.IO.Path.Combine(outputDirectory, ManifestFilterExpression).ToString()]" Result="[ComponentsCollection]" />
                    <Sequence DisplayName="Manifest Files Tag Replacement" sap:VirtualizedContainerService.HintSize="222,332">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <taf:File Attributes="{x:Null}" Checksum="{x:Null}" FailBuildOnError="{x:Null}" IgnoreExceptions="{x:Null}" Path="{x:Null}" TargetPath="{x:Null}" TextEncoding="{x:Null}" TreatWarningsAsErrors="{x:Null}" Action="Replace" DisplayName="Manifests Replace EnvironmentServerType" Files="[New List(Of String) From {ManifestLocation + &quot;\ReleaseManifest.xml&quot;, ManifestLocation + &quot;\ConfigurationManifest.xml&quot;}]" Force="False" sap:VirtualizedContainerService.HintSize="200,22" LogExceptionStack="True" RegexPattern="\[\[EnvironmentServerType\]\]" Replacement="[EnvironmentServerType]" Time="0001-01-01" />
                      <taf:File Attributes="{x:Null}" Checksum="{x:Null}" FailBuildOnError="{x:Null}" IgnoreExceptions="{x:Null}" Path="{x:Null}" TargetPath="{x:Null}" TextEncoding="{x:Null}" TreatWarningsAsErrors="{x:Null}" Action="Replace" DisplayName="Manifest Replace ManifestPackageIdentifier" Files="[New List(Of String) From {ManifestLocation + &quot;\ReleaseManifest.xml&quot;, ManifestLocation + &quot;\ConfigurationManifest.xml&quot;}]" Force="False" sap:VirtualizedContainerService.HintSize="200,22" LogExceptionStack="True" RegexPattern="\[\[ManifestPackageIdentifier\]\]" Replacement="[ManifestPackageIdentifier]" Time="0001-01-01" />
                      <taf:File Attributes="{x:Null}" Checksum="{x:Null}" FailBuildOnError="{x:Null}" IgnoreExceptions="{x:Null}" Path="{x:Null}" TargetPath="{x:Null}" TextEncoding="{x:Null}" TreatWarningsAsErrors="{x:Null}" Action="Replace" DisplayName="Manifest Replace DropLocation" Files="[New List(Of String) From {ManifestLocation + &quot;\ReleaseManifest.xml&quot;, ManifestLocation + &quot;\ConfigurationManifest.xml&quot;}]" Force="False" sap:VirtualizedContainerService.HintSize="200,22" LogExceptionStack="True" RegexPattern="\[\[DropLocation\]\]" Replacement="[BuildDetail.DropLocation]" Time="0001-01-01" />
                      <taf:File Attributes="{x:Null}" Checksum="{x:Null}" FailBuildOnError="{x:Null}" IgnoreExceptions="{x:Null}" Path="{x:Null}" TargetPath="{x:Null}" TextEncoding="{x:Null}" TreatWarningsAsErrors="{x:Null}" Action="Replace" DisplayName="Manifest Replace ComponentName" Files="[New List(Of String) From {ManifestLocation + &quot;\ReleaseManifest.xml&quot;, ManifestLocation + &quot;\ConfigurationManifest.xml&quot;}]" Force="False" sap:VirtualizedContainerService.HintSize="200,22" LogExceptionStack="True" RegexPattern="\[\[ComponentName\]\]" Replacement="[Path.GetFileName(ComponentsCollection.FirstOrDefault())]" Time="0001-01-01" />
                    </Sequence>
                    <tas:InvokePowerShellCommand Arguments="{x:Null}" DisplayName="Rename Manifest Files" sap:VirtualizedContainerService.HintSize="222,22" Script="[&quot;Dir &quot; + ManifestLocation + &quot;\*Manifest*.xml | rename-item -newname { &quot;&quot;&quot; + BuildDetail.BuildDefinition.Name + &quot;_&quot;&quot;&quot; + &quot; + $_.Name }&quot;]" />
                  </Sequence>
                </If.Then>
                <If.Else>
                  <mtbwa:WriteBuildMessage DisplayName="No Manifests Found" sap:VirtualizedContainerService.HintSize="200,580" Message="No manifests found. All manifest related activites will be skipped." mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                </If.Else>
              </If>
            </Sequence>
            <Sequence DisplayName="ARR Scripts Copy Sequence" sap:VirtualizedContainerService.HintSize="491,433">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="ARRScriptsLocalPath" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If Condition="[ShouldCopyARRScripts]" sap:VirtualizedContainerService.HintSize="464,309">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="231,208">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <mtbwa:ConvertWorkspaceItem DisplayName="Get ARR Scripts Workspace Path" sap:VirtualizedContainerService.HintSize="200,22" Input="[&quot;$/Tesco_API/&quot; + BranchToBuild + &quot;/Tesco/Deployment/ARR Scripts&quot;]" Result="[ARRScriptsLocalPath]" Workspace="[Workspace]" />
                    <taf:RoboCopy FailBuildOnError="{x:Null}" IgnoreExceptions="{x:Null}" LogToBuild="{x:Null}" ReturnCode="{x:Null}" TreatWarningsAsErrors="{x:Null}" Action="Copy" Destination="[BuildDetail.DropLocation + &quot;\ARR Scripts&quot;]" DisplayName="RoboCopy ARR Scripts to BuildOutput" Files="*.*" sap:VirtualizedContainerService.HintSize="200,22" LogExceptionStack="True" Options="/S" Source="[ARRScriptsLocalPath]" />
                  </Sequence>
                </If.Then>
                <If.Else>
                  <mtbwa:WriteBuildMessage DisplayName="ARR Activity Skipped" sap:VirtualizedContainerService.HintSize="208,208" Message="The ARR Scripts copy activiy has been skipped." mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                </If.Else>
              </If>
            </Sequence>
            <mtbwa:InvokeForReason DisplayName="Revert Workspace for CheckinShelveset Builds" sap:VirtualizedContainerService.HintSize="486,49" Reason="CheckInShelveset">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <mtbwa:RevertWorkspace DisplayName="Revert Workspace" sap:VirtualizedContainerService.HintSize="200,22" Workspace="[Workspace]" />
            </mtbwa:InvokeForReason>
            <If Condition="[DropBuild]" DisplayName="If DropBuild" sap:VirtualizedContainerService.HintSize="486,49">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <mtbwa:InvokeForReason DisplayName="Copy Files to Drop Location for Triggered Builds" sap:VirtualizedContainerService.HintSize="281,146" Reason="Triggered">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <mtbwa:CopyDirectory Destination="[BuildDetail.DropLocation]" DisplayName="Copy Files to Drop Location" sap:VirtualizedContainerService.HintSize="200,22" Source="[BinariesDirectory]" />
                </mtbwa:InvokeForReason>
              </If.Then>
            </If>
          </Sequence>
        </TryCatch.Finally>
        <TryCatch.Try>
          <Sequence sap:VirtualizedContainerService.HintSize="400,100">
            <Sequence.Variables>
              <Variable x:TypeArguments="s:Exception" Name="compilationException" />
              <Variable x:TypeArguments="x:Boolean" Name="treatTestFailureAsBuildFailure" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Parallel DisplayName="Compile, Test, and Associate Changesets and Work Items" sap:VirtualizedContainerService.HintSize="554,95">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <TryCatch DisplayName="Try Compile and Test" sap:VirtualizedContainerService.HintSize="200,49">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <TryCatch.Try>
                  <Sequence DisplayName="Compile and Test" sap:VirtualizedContainerService.HintSize="400,100">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ForEach x:TypeArguments="mtbwa:PlatformConfiguration" DisplayName="For Each Configuration in BuildSettings.PlatformConfigurations" sap:VirtualizedContainerService.HintSize="282,613" Values="[BuildSettings.PlatformConfigurations]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsPinned">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ActivityAction x:TypeArguments="mtbwa:PlatformConfiguration">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="mtbwa:PlatformConfiguration" Name="platformConfiguration" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Compile and Test for Configuration" sap:VirtualizedContainerService.HintSize="252,510">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="x:String" Name="logFileDropLocation" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Sequence DisplayName="Initialize Variables" sap:VirtualizedContainerService.HintSize="222,208">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign x:TypeArguments="x:String" DisplayName="Initialize OutputDirectory" sap:VirtualizedContainerService.HintSize="200,22" To="[outputDirectory]" Value="[If (platformConfiguration.IsEmpty Or BuildSettings.PlatformConfigurations.Count = 1, BinariesDirectory, If (platformConfiguration.IsPlatformEmptyOrAnyCpu, BinariesDirectory + &quot;\&quot; + platformConfiguration.Configuration, BinariesDirectory + &quot;\&quot; + platformConfiguration.Platform + &quot;\&quot; + platformConfiguration.Configuration))]" />
                            <Assign x:TypeArguments="x:String" DisplayName="Initialize LogFile Drop Location" sap:VirtualizedContainerService.HintSize="200,22" To="[logFileDropLocation]" Value="[If (platformConfiguration.IsEmpty Or BuildSettings.PlatformConfigurations.Count = 1, BuildDetail.DropLocation + &quot;\logs&quot;, If (platformConfiguration.IsPlatformEmptyOrAnyCpu, BuildDetail.DropLocation + &quot;\logs\&quot; + platformConfiguration.Configuration, BuildDetail.DropLocation + &quot;\logs\&quot; + platformConfiguration.Platform + &quot;\&quot; + platformConfiguration.Configuration))]" />
                          </Sequence>
                          <If Condition="[BuildSettings.HasProjectsToBuild]" DisplayName="If BuildSettings.HasProjectsToBuild" sap:VirtualizedContainerService.HintSize="222,49">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <ForEach x:TypeArguments="x:String" DisplayName="For Each Project in BuildSettings.ProjectsToBuild" sap:VirtualizedContainerService.HintSize="448,381" Values="[BuildSettings.ProjectsToBuild]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ActivityAction x:TypeArguments="x:String">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="x:String" Name="serverBuildProjectItem" />
                                  </ActivityAction.Argument>
                                  <TryCatch DisplayName="Try to Compile the Project" sap:VirtualizedContainerService.HintSize="418,278">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <TryCatch.Try>
                                      <Sequence DisplayName="Compile the Project" sap:VirtualizedContainerService.HintSize="400,100">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <mtbwa:ConvertWorkspaceItem DisplayName="Convert Server Path to Local Path" sap:VirtualizedContainerService.HintSize="264,22" Input="[serverBuildProjectItem]" Result="[localProject]" Workspace="[Workspace]" />
                                        <mtbwa:MSBuild CommandLineArguments="[String.Format(&quot;/p:SkipInvalidConfigurations=false {0} /p:Env={1}&quot;, MSBuildArguments, DeployToEnvironment)]" Configuration="[platformConfiguration.Configuration]" DisplayName="Run MSBuild for Project" GenerateVSPropsFile="[True]" sap:VirtualizedContainerService.HintSize="264,22" LogFileDropLocation="[logFileDropLocation]" OutDir="[outputDirectory]" Platform="[platformConfiguration.Platform]" Project="[localProject]" RunCodeAnalysis="[RunCodeAnalysis]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" TargetsNotLogged="[New String() {&quot;GetNativeManifest&quot;, &quot;GetCopyToOutputDirectoryItems&quot;, &quot;GetTargetPath&quot;}]" ToolPlatform="[MSBuildPlatform]" Verbosity="[Verbosity]" />
                                        <Sequence DisplayName="Run Stylecop" sap:VirtualizedContainerService.HintSize="264,429">
                                          <Sequence.Variables>
                                            <Variable x:TypeArguments="scg:IEnumerable(x:String)" Name="StyleCopFiles" />
                                            <Variable x:TypeArguments="x:String" Name="StyleCopSettingsFile" />
                                            <Variable x:TypeArguments="x:Boolean" Name="StyleCopResults" />
                                            <Variable x:TypeArguments="x:Int32" Name="StyleCopViolations" />
                                          </Sequence.Variables>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <mtbwa:FindMatchingFiles sap:VirtualizedContainerService.HintSize="242,22" MatchPattern="[String.Format(&quot;{0}\**\*.cs&quot;, BuildDirectory)]" Result="[StyleCopFiles]" />
                                          <Assign sap:VirtualizedContainerService.HintSize="242,57">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[StyleCopSettingsFile]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[String.Format("{0}{1}", SourcesDirectory, StyleCopSettingsPath)]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="242,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[String.Format(&quot;About to run Stylecop with {0} on files {1}&quot;, StyleCopSettingsFile, StyleCopFiles.ToArray().Length)]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                                          <tac:StyleCop AdditionalAddInPaths="{x:Null}" CacheResults="{x:Null}" ForceFullAnalysis="{x:Null}" IgnoreExceptions="{x:Null}" LogFile="{x:Null}" MaximumViolationCount="{x:Null}" ShowOutput="{x:Null}" TreatWarningsAsErrors="{x:Null}" XmlOutputFile="{x:Null}" FailBuildOnError="[FailBuildOnStyleCopError]" sap:VirtualizedContainerService.HintSize="242,22" LogExceptionStack="True" SettingsFile="[StyleCopSettingsFile]" SourceFiles="[StyleCopFiles.ToArray()]" Succeeded="[StyleCopResults]" TreatViolationsErrorsAsWarnings="[TreatViolationsErrorsAsWarnings]" ViolationCount="[StyleCopViolations]" />
                                          <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="242,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[String.Format(&quot;StyleCop Successed:{0} with {1} violations&quot;, StyleCopResults, StyleCopViolations)]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                                        </Sequence>
                                      </Sequence>
                                    </TryCatch.Try>
                                    <TryCatch.Catches>
                                      <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,20">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ActivityAction x:TypeArguments="s:Exception">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="s:Exception" Name="ex" />
                                          </ActivityAction.Argument>
                                          <Sequence DisplayName="Handle Exception" sap:VirtualizedContainerService.HintSize="486,495">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <mtbwa:SetBuildProperties CompilationStatus="[Microsoft.TeamFoundation.Build.Client.BuildPhaseStatus.Failed]" DisplayName="Set CompilationStatus to Failed" sap:VirtualizedContainerService.HintSize="464,22" PropertiesToSet="CompilationStatus" />
                                            <If Condition="[CreateWorkItem]" DisplayName="If CreateWorkItem" sap:VirtualizedContainerService.HintSize="464,247">
                                              <If.Then>
                                                <mtbwa:InvokeForReason DisplayName="Create Work Item for non-Shelveset Builds" sap:VirtualizedContainerService.HintSize="281,146" Reason="Manual, IndividualCI, BatchedCI, Schedule, ScheduleForced, UserCreated">
                                                  <mtbwa:OpenWorkItem AssignedTo="[BuildDetail.RequestedFor]" Comment="[&quot;This work item was created by TFS Build on a build failure.&quot;]" CustomFields="[New Dictionary(Of String, String) From {{&quot;System.Reason&quot;, &quot;Build Failure&quot;}, {&quot;Reason&quot;, &quot;Build Failure&quot;}, {&quot;Scrum.v3.BugOrigin&quot;, &quot;Build&quot;}, {&quot;Microsoft.VSTS.TCM.ReproSteps&quot;, &quot;Start the build using TFS Build&quot;}}]" DisplayName="Create Work Item" sap:VirtualizedContainerService.HintSize="200,22" Title="[String.Format(&quot;Build Failure in Build: {0}&quot;, BuildDetail.BuildNumber)]" Type="[&quot;Bug&quot;]" />
                                                </mtbwa:InvokeForReason>
                                              </If.Then>
                                            </If>
                                            <Rethrow DisplayName="Rethrow the exception so the build will stop" sap:VirtualizedContainerService.HintSize="464,22" />
                                          </Sequence>
                                        </ActivityAction>
                                      </Catch>
                                    </TryCatch.Catches>
                                  </TryCatch>
                                </ActivityAction>
                              </ForEach>
                            </If.Then>
                          </If>
                          <If Condition="[Not DisableTests]" DisplayName="If Not DisableTests" sap:VirtualizedContainerService.HintSize="222,49">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <Sequence DisplayName="Run Tests" sap:VirtualizedContainerService.HintSize="1053,1829">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If Condition="[Not TestSpecs Is Nothing]" DisplayName="If Not TestSpecs Is Nothing" sap:VirtualizedContainerService.HintSize="1031,1705">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If.Then>
                                    <ForEach x:TypeArguments="mtbwa:TestSpec" DisplayName="For Each TestSpec in TestSpecs" sap:VirtualizedContainerService.HintSize="906,1604" Values="[TestSpecs]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ActivityAction x:TypeArguments="mtbwa:TestSpec">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="mtbwa:TestSpec" Name="spec" />
                                        </ActivityAction.Argument>
                                        <TryCatch DisplayName="Try Run Tests" sap:VirtualizedContainerService.HintSize="876,1501">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <TryCatch.Try>
                                            <If Condition="[TypeOf spec Is Microsoft.TeamFoundation.Build.Workflow.Activities.TestMetadataFileSpec]" DisplayName="If spec Is TestMetadataFileSpec" sap:VirtualizedContainerService.HintSize="858,759">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <If.Then>
                                                <Sequence DisplayName="Run MSTest for Metadata File" sap:VirtualizedContainerService.HintSize="222,658">
                                                  <Sequence.Variables>
                                                    <Variable x:TypeArguments="mtbwa:TestMetadataFileSpec" Name="testMetadataFile" />
                                                    <Variable x:TypeArguments="x:String" Name="localTestMetadata" />
                                                  </Sequence.Variables>
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <Assign x:TypeArguments="mtbwa:TestMetadataFileSpec" DisplayName="Assign spec to testMetadataFile" sap:VirtualizedContainerService.HintSize="200,22" To="[testMetadataFile]" Value="[DirectCast(spec, Microsoft.TeamFoundation.Build.Workflow.Activities.TestMetadataFileSpec)]" />
                                                  <mtbwa:ConvertWorkspaceItem DisplayName="Convert Server Path to Local Path" sap:VirtualizedContainerService.HintSize="200,22" Input="[testMetadataFile.MetadataFileName]" Result="[localTestMetadata]" Workspace="[Workspace]" />
                                                  <mtbwa:MSTest Category="[If(ExcludeIntegrationTests, &quot;!Integration&quot; + testMetadataFile.CategoryFilter, testMetadataFile.CategoryFilter)]" CommandLineArguments="[testMetadataFile.MSTestCommandLineArgs]" DisplayName="Run MSTest for Metadata File" Flavor="[platformConfiguration.Configuration]" sap:VirtualizedContainerService.HintSize="200,22" MaxPriority="[testMetadataFile.MaximumPriority]" MinPriority="[testMetadataFile.MinimumPriority]" PathToResultsFilesRoot="[TestResultsDirectory]" Platform="[platformConfiguration.Platform]" SearchPathRoot="[outputDirectory]" TestLists="[testMetadataFile.TestLists]" TestMetadata="[localTestMetadata]" TestSettings="[String.Empty]" />
                                                </Sequence>
                                              </If.Then>
                                              <If.Else>
                                                <Sequence DisplayName="Run MSTest for Test Assemblies" sap:VirtualizedContainerService.HintSize="611,658">
                                                  <Sequence.Variables>
                                                    <Variable x:TypeArguments="mtbwa:TestAssemblySpec" Name="testAssembly" />
                                                    <Variable x:TypeArguments="scg:IEnumerable(x:String)" Name="testAssemblies" />
                                                    <Variable x:TypeArguments="x:String" Default="[String.Empty]" Name="testFlavor" />
                                                    <Variable x:TypeArguments="x:String" Default="[String.Empty]" Name="testPlatform" />
                                                  </Sequence.Variables>
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <Assign x:TypeArguments="mtbwa:TestAssemblySpec" DisplayName="Assign spec to testAssembly" sap:VirtualizedContainerService.HintSize="589,22" To="[testAssembly]" Value="[DirectCast(spec, Microsoft.TeamFoundation.Build.Workflow.Activities.TestAssemblySpec)]" />
                                                  <mtbwa:FindMatchingFiles DisplayName="Find Test Assemblies" sap:VirtualizedContainerService.HintSize="589,22" MatchPattern="[String.Format(&quot;{0}\{1}&quot;, outputDirectory, testAssembly.AssemblyFileSpec)]" Result="[testAssemblies]" />
                                                  <If Condition="[testAssemblies.Count() &gt; 0]" DisplayName="If Test Assemblies Found" sap:VirtualizedContainerService.HintSize="589,410">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <If.Then>
                                                      <If Condition="[testAssembly.HasTestSettingsFile]" DisplayName="If testAssembly.HasTestSettingsFile" sap:VirtualizedContainerService.HintSize="464,309">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                        <If.Then>
                                                          <Sequence DisplayName="Find Test Settings File And Run MSTest" sap:VirtualizedContainerService.HintSize="231,208">
                                                            <Sequence.Variables>
                                                              <Variable x:TypeArguments="x:String" Name="localTestSettings" />
                                                            </Sequence.Variables>
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                            <mtbwa:ConvertWorkspaceItem DisplayName="Convert Server Path to Local Path" sap:VirtualizedContainerService.HintSize="200,22" Input="[testAssembly.TestSettingsFileName]" Result="[localTestSettings]" Workspace="[Workspace]" />
                                                            <mtbwa:MSTest Category="[If(ExcludeIntegrationTests, &quot;!Integration&quot; + testAssembly.CategoryFilter, testAssembly.CategoryFilter)]" CommandLineArguments="[testAssembly.MSTestCommandLineArgs]" DisplayName="Run MSTest for TestAssemblies" Flavor="[platformConfiguration.Configuration]" sap:VirtualizedContainerService.HintSize="200,22" MaxPriority="[testAssembly.MaximumPriority]" MinPriority="[testAssembly.MinimumPriority]" PathToResultsFilesRoot="[TestResultsDirectory]" Platform="[platformConfiguration.Platform]" SearchPathRoot="[outputDirectory]" TestContainers="[testAssemblies]" TestSettings="[localTestSettings]" />
                                                          </Sequence>
                                                        </If.Then>
                                                        <If.Else>
                                                          <mtbwa:MSTest Category="[If(ExcludeIntegrationTests, &quot;!Integration&quot; + testAssembly.CategoryFilter, testAssembly.CategoryFilter)]" CommandLineArguments="[testAssembly.MSTestCommandLineArgs]" DisplayName="Run MSTest for TestAssemblies" Flavor="[platformConfiguration.Configuration]" sap:VirtualizedContainerService.HintSize="208,208" MaxPriority="[testAssembly.MaximumPriority]" MinPriority="[testAssembly.MinimumPriority]" PathToResultsFilesRoot="[TestResultsDirectory]" Platform="[platformConfiguration.Platform]" SearchPathRoot="[outputDirectory]" TestContainers="[testAssemblies]" />
                                                        </If.Else>
                                                      </If>
                                                    </If.Then>
                                                  </If>
                                                </Sequence>
                                              </If.Else>
                                            </If>
                                          </TryCatch.Try>
                                          <TryCatch.Catches>
                                            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="862,480">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ActivityAction x:TypeArguments="s:Exception">
                                                <ActivityAction.Argument>
                                                  <DelegateInArgument x:TypeArguments="s:Exception" Name="testException" />
                                                </ActivityAction.Argument>
                                                <Sequence DisplayName="Handle MSTest Exception" sap:VirtualizedContainerService.HintSize="856,449">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <mtbwa:WriteBuildError sap:VirtualizedContainerService.HintSize="464,22" Message="[testException.Message]" />
                                                  <mtbwa:SetBuildProperties DisplayName="Set TestStatus to Failed" sap:VirtualizedContainerService.HintSize="464,22" PropertiesToSet="TestStatus" TestStatus="[Microsoft.TeamFoundation.Build.Client.BuildPhaseStatus.Failed]" />
                                                  <If Condition="[spec.FailBuildOnFailure]" DisplayName="If spec.FailBuildOnFailure" sap:VirtualizedContainerService.HintSize="464,201">
                                                    <If.Then>
                                                      <Assign x:TypeArguments="x:Boolean" DisplayName="Set treatTestFailureAsBuildFailure to True" sap:VirtualizedContainerService.HintSize="269,100" To="[treatTestFailureAsBuildFailure]" Value="[True]" />
                                                    </If.Then>
                                                  </If>
                                                </Sequence>
                                              </ActivityAction>
                                            </Catch>
                                          </TryCatch.Catches>
                                        </TryCatch>
                                      </ActivityAction>
                                    </ForEach>
                                  </If.Then>
                                </If>
                              </Sequence>
                            </If.Then>
                          </If>
                        </Sequence>
                      </ActivityAction>
                    </ForEach>
                    <If Condition="[BuildDetail.CompilationStatus = Microsoft.TeamFoundation.Build.Client.BuildPhaseStatus.Unknown]" DisplayName="If CompilationStatus = Unknown" sap:VirtualizedContainerService.HintSize="282,49">
                      <If.Then>
                        <mtbwa:SetBuildProperties CompilationStatus="[Microsoft.TeamFoundation.Build.Client.BuildPhaseStatus.Succeeded]" DisplayName="Set CompilationStatus to Succeeded" sap:VirtualizedContainerService.HintSize="269,100" PropertiesToSet="CompilationStatus" />
                      </If.Then>
                    </If>
                    <If Condition="[BuildDetail.TestStatus = Microsoft.TeamFoundation.Build.Client.BuildPhaseStatus.Unknown]" DisplayName="If TestStatus = Unknown" sap:VirtualizedContainerService.HintSize="282,49">
                      <If.Then>
                        <mtbwa:SetBuildProperties DisplayName="Set TestStatus to Succeeded" sap:VirtualizedContainerService.HintSize="269,100" PropertiesToSet="TestStatus" TestStatus="[Microsoft.TeamFoundation.Build.Client.BuildPhaseStatus.Succeeded]" />
                      </If.Then>
                    </If>
                    <If Condition="[treatTestFailureAsBuildFailure And (BuildDetail.TestStatus = Microsoft.TeamFoundation.Build.Client.BuildPhaseStatus.Failed)]" DisplayName="If TreatTestFailureAsBuildFailure And (TestStatus = Failed)" sap:VirtualizedContainerService.HintSize="282,49">
                      <If.Then>
                        <mtbwa:SetBuildProperties DisplayName="Set Status to Failed" sap:VirtualizedContainerService.HintSize="269,100" PropertiesToSet="Status" Status="[Microsoft.TeamFoundation.Build.Client.BuildStatus.Failed]" />
                      </If.Then>
                    </If>
                  </Sequence>
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,20">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ActivityAction x:TypeArguments="s:Exception">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="s:Exception" Name="compilationExceptionArgument" />
                      </ActivityAction.Argument>
                      <Assign x:TypeArguments="s:Exception" DisplayName="Save the Compilation Exception" sap:VirtualizedContainerService.HintSize="1250,75" To="[compilationException]" Value="[compilationExceptionArgument]" />
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
              </TryCatch>
              <If Condition="[AssociateChangesetsAndWorkItems]" DisplayName="If AssociateChangesetsAndWorkItems" sap:VirtualizedContainerService.HintSize="200,49">
                <If.Then>
                  <mtbwa:InvokeForReason DisplayName="Associate Changesets and Work Items for non-Shelveset Builds" sap:VirtualizedContainerService.HintSize="281,146" Reason="Manual, IndividualCI, BatchedCI, Schedule, ScheduleForced, UserCreated">
                    <mtbwa:AssociateChangesetsAndWorkItems DisplayName="Associate Changesets and Work Items" sap:VirtualizedContainerService.HintSize="200,22" />
                  </mtbwa:InvokeForReason>
                </If.Then>
              </If>
            </Parallel>
            <If Condition="[Not compilationException Is Nothing]" DisplayName="If a Compilation Exception Occurred" sap:VirtualizedContainerService.HintSize="554,49">
              <If.Then>
                <Throw DisplayName="Rethrow Compilation Exception" Exception="[compilationException]" sap:VirtualizedContainerService.HintSize="269,100" />
              </If.Then>
            </If>
            <Parallel DisplayName="Get Impacted Tests, Index Sources and Publish Symbols" sap:VirtualizedContainerService.HintSize="554,49">
              <If Condition="[PerformTestImpactAnalysis]" DisplayName="If PerformTestImpactAnalysis" sap:VirtualizedContainerService.HintSize="464,1425">
                <If.Then>
                  <Sequence DisplayName="Get Impacted Tests" sap:VirtualizedContainerService.HintSize="281,208">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="scg:IEnumerable(x:String)" Name="assemblies" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <mtbwa:FindMatchingFiles DisplayName="Find Build Outputs" sap:VirtualizedContainerService.HintSize="200,22" MatchPattern="[String.Format(&quot;{0}\**\*.dll;{0}\**\*.exe&quot;, BinariesDirectory)]" Result="[assemblies]" />
                    <mttbb:GetImpactedTests AssociatedChangesets="{x:Null}" BaselineBuildDropLocation="{x:Null}" CodeChanges="{x:Null}" ImpactedTests="{x:Null}" Assemblies="[assemblies]" BinariesRoot="[BinariesDirectory]" Build="[BuildDetail]" DisplayName="Get Impacted Tests" sap:VirtualizedContainerService.HintSize="200,22" Workspace="[Workspace]" />
                  </Sequence>
                </If.Then>
              </If>
              <If Condition="[SourceAndSymbolServerSettings.IndexSources Or SourceAndSymbolServerSettings.HasSymbolStorePath]" DisplayName="If SourceAndSymbolServerSettings.IndexSources Or SourceAndSymbolServerSettings.HasSymbolStorePath" sap:VirtualizedContainerService.HintSize="690,1425">
                <If.Then>
                  <mtbwa:InvokeForReason DisplayName="Index Sources and Publish Symbols for Triggered Builds" sap:VirtualizedContainerService.HintSize="565,1324" Reason="Triggered">
                    <mtbwa:InvokeForReason.Variables>
                      <Variable x:TypeArguments="scg:IEnumerable(x:String)" Name="symbolFiles" />
                    </mtbwa:InvokeForReason.Variables>
                    <mtbwa:FindMatchingFiles DisplayName="Find Symbol Files" sap:VirtualizedContainerService.HintSize="543,22" MatchPattern="[String.Format(&quot;{0}\**\*.pdb&quot;, BinariesDirectory)]" Result="[symbolFiles]" />
                    <If Condition="[SourceAndSymbolServerSettings.IndexSources]" DisplayName="If SourceAndSymbolServerSettings.IndexSources" sap:VirtualizedContainerService.HintSize="543,483">
                      <If.Then>
                        <TryCatch DisplayName="Try Index Sources" sap:VirtualizedContainerService.HintSize="418,382">
                          <TryCatch.Try>
                            <mtbwa:IndexSources DisplayName="Index Sources" FileList="[symbolFiles]" sap:VirtualizedContainerService.HintSize="400,100" />
                          </TryCatch.Try>
                          <TryCatch.Catches>
                            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,20">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ActivityAction x:TypeArguments="s:Exception">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                </ActivityAction.Argument>
                                <mtbwa:WriteBuildError sap:VirtualizedContainerService.HintSize="398,75" Message="[exception.Message]" />
                              </ActivityAction>
                            </Catch>
                          </TryCatch.Catches>
                        </TryCatch>
                      </If.Then>
                    </If>
                    <If Condition="[SourceAndSymbolServerSettings.HasSymbolStorePath]" DisplayName="If SourceAndSymbolServerSettings.HasSymbolStorePath" sap:VirtualizedContainerService.HintSize="543,615">
                      <If.Then>
                        <TryCatch DisplayName="Try Publish Symbols" sap:VirtualizedContainerService.HintSize="418,514">
                          <TryCatch.Try>
                            <mtbwa:SharedResourceScope DisplayName="Synchronize Access to Symbol Store" sap:VirtualizedContainerService.HintSize="400,146" MaxExecutionTime="[TimeSpan.Zero]" MaxWaitTime="[New TimeSpan(1, 0, 0)]" ResourceName="[SourceAndSymbolServerSettings.SymbolStorePath]">
                              <mtbwa:PublishSymbols DisplayName="Publish Symbols" FileList="[symbolFiles]" sap:VirtualizedContainerService.HintSize="200,22" ProductName="[BuildDetail.BuildDefinition.Name]" StorePath="[SourceAndSymbolServerSettings.SymbolStorePath]" Version="[BuildDetail.BuildNumber]" />
                            </mtbwa:SharedResourceScope>
                          </TryCatch.Try>
                          <TryCatch.Catches>
                            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,106">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ActivityAction x:TypeArguments="s:Exception">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                </ActivityAction.Argument>
                                <mtbwa:WriteBuildError sap:VirtualizedContainerService.HintSize="398,75" Message="[exception.Message]" />
                              </ActivityAction>
                            </Catch>
                          </TryCatch.Catches>
                        </TryCatch>
                      </If.Then>
                    </If>
                  </mtbwa:InvokeForReason>
                </If.Then>
              </If>
            </Parallel>
          </Sequence>
        </TryCatch.Try>
      </TryCatch>
      <If Condition="[FileRefCheckinTargetFileName = &quot;&quot;]" DisplayName="If Checkin Target file is specified" sap:VirtualizedContainerService.HintSize="418,49">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Else>
          <mtbwa:MSBuild sap:VirtualizedContainerService.HintSize="270,100" LogFile="MyBuild.Log" LogFileDropLocation="[BuildDetail.DropLocation + &quot;\log&quot;]" Project="[String.Format(&quot;{0}\{2}\Tesco\Com\Build\{1}&quot;, SourcesDirectory, FileRefCheckinTargetFileName, BranchToBuild)]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" Targets="[New String() {&quot;MyTarget&quot;}]" />
        </If.Else>
      </If>
    </mtbwa:AgentScope>
    <mtbwa:InvokeForReason DisplayName="Check In Gated Changes for CheckInShelveset Builds" sap:VirtualizedContainerService.HintSize="486,49" Reason="CheckInShelveset">
      <mtbwa:InvokeForReason.Variables>
        <Variable x:TypeArguments="x:Boolean" Name="ignoreErrors" />
      </mtbwa:InvokeForReason.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If Condition="[AllowCheckinOnTestFailure]" sap:VirtualizedContainerService.HintSize="200,49">
        <If.Then>
          <Sequence DisplayName="Find out to ignore error" sap:VirtualizedContainerService.HintSize="200,100">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="242,57">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Boolean">[ignoreErrors]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Boolean">[If((BuildDetail.CompilationStatus = BuildPhaseStatus.Succeeded And BuildDetail.TestStatus = BuildPhaseStatus.Failed), True, False)]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </If.Then>
        <If.Else>
          <Assign sap:VirtualizedContainerService.HintSize="242,100">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Boolean">[ignoreErrors]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
            </Assign.Value>
          </Assign>
        </If.Else>
      </If>
      <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="200,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[String.Format(&quot;AllowCheckinOnTestFailure {0} IgnoreErrors {1} &quot;, AllowCheckinOnTestFailure.ToString(), ignoreErrors.ToString())]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
      <mtbwa:CheckInGatedChanges DisplayName="Check In Gated Changes" sap:VirtualizedContainerService.HintSize="200,22" IgnoreErrors="[ignoreErrors]" />
    </mtbwa:InvokeForReason>
    <Sequence DisplayName="Publish NuGet Packages" sap:VirtualizedContainerService.HintSize="486,325">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If Condition="[PublishNuGetPackages = True And (BuildDetail.Reason.ToString().Equals(&quot;CheckInShelveset&quot;) Or OverrideCheckIn = True)]" sap:VirtualizedContainerService.HintSize="464,201">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence DisplayName="Generate NuGet Package" sap:VirtualizedContainerService.HintSize="219,100">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Default="[BuildDetail.DropLocation]" Name="NugetWorkingPath" />
              <Variable x:TypeArguments="x:String" Default="&lt;?xml version='1.0'?&gt;&lt;package&gt;&lt;metadata&gt;&lt;id&gt;{0}&lt;/id&gt;&lt;version&gt;0.0.0&lt;/version&gt;&lt;authors&gt;Tesco API Team&lt;/authors&gt;&lt;owners&gt;Tesco API Team&lt;/owners&gt;&lt;iconUrl&gt;{1}&lt;/iconUrl&gt;&lt;description&gt;Tesco API Package. Release : {2}&lt;/description&gt;&lt;copyright&gt;Copyright 2013&lt;/copyright&gt;&lt;dependencies&gt;{3}&lt;/dependencies&gt;&lt;/metadata&gt;&lt;/package&gt;" Name="NugetSpecFileContent" />
              <Variable x:TypeArguments="x:String" Name="NugetDirectoryName" />
              <Variable x:TypeArguments="x:String" Name="NugetSpecFilePath" />
              <Variable x:TypeArguments="x:String" Name="NugetPackageVersion" />
              <Variable x:TypeArguments="x:String" Name="NugetPackageName" />
              <Variable x:TypeArguments="x:String" Name="depPackageId" />
              <Variable x:TypeArguments="x:String" Name="depVersionNo" />
              <Variable x:TypeArguments="x:String" Name="NugetReleaseName" />
              <Variable x:TypeArguments="x:String" Name="depDependencyString" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign DisplayName="Get Directory Name (Release_Name_Version)" sap:VirtualizedContainerService.HintSize="242,57">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[NugetDirectoryName]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[New DirectoryInfo(NugetWorkingPath).Name]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Get Version Part Only" sap:VirtualizedContainerService.HintSize="242,57">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[NugetPackageVersion]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[NugetDirectoryName.Split(New Char() {"_"c})(2)]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Get Name Part Only" sap:VirtualizedContainerService.HintSize="242,57">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[NugetPackageName]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[NugetDirectoryName.Split(New Char() {"_"c})(1)]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Get Release Name" sap:VirtualizedContainerService.HintSize="242,57">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[NugetReleaseName]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[NugetDirectoryName.Split(New Char() {"_"c})(0)]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Set working path Build Directory \ Nuget" sap:VirtualizedContainerService.HintSize="242,57">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[NugetWorkingPath]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[Path.Combine(NugetWorkingPath, "NuGet")]</InArgument>
              </Assign.Value>
            </Assign>
            <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="242,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[String.Format(&quot;Copying dll to {0}&quot;, NugetWorkingPath)]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
            <mtbwa:CreateDirectory Directory="[NugetWorkingPath]" sap:VirtualizedContainerService.HintSize="242,22" />
            <taf:RoboCopy FailBuildOnError="{x:Null}" IgnoreExceptions="{x:Null}" LogToBuild="{x:Null}" ReturnCode="{x:Null}" TreatWarningsAsErrors="{x:Null}" Action="Copy" Destination="[Path.Combine(NugetWorkingPath, &quot;Lib&quot;, &quot;Net40&quot;)]" DisplayName="Prepare Lib Folder with Dlls" Files="[PublishNuGetFilterExpressions]" sap:VirtualizedContainerService.HintSize="242,22" LogExceptionStack="True" Options="[PublishNuGetFilterOptions]" Source="[BuildDetail.DropLocation]" />
            <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="242,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[String.Format(&quot;Dlls copied to {0}&quot;, NugetWorkingPath)]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
            <ForEach x:TypeArguments="x:String" DisplayName="Generate dependencies tag" sap:VirtualizedContainerService.HintSize="242,49" Values="[NugetDependentPackages]">
              <ActivityAction x:TypeArguments="x:String">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:String" Name="depPackage" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Generate Dependency string" sap:VirtualizedContainerService.HintSize="252,100">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="242,57">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[depPackageId]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[depPackage.Split(New Char() {"="c})(0)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="242,57">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[depVersionNo]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[depPackage.Split(New Char() {"="c})(1)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="242,57">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[depDependencyString]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[depDependencyString + String.Format("&lt;dependency id=""{0}"" version=""{1}"" /&gt;", depPackageId, depVersionNo)]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </ActivityAction>
            </ForEach>
            <Assign DisplayName="Generate Spec File Content" sap:VirtualizedContainerService.HintSize="242,59">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[NugetSpecFileContent]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String" xml:space="preserve">[String.Format(NugetSpecFileContent,
              If(IncludeReleaseName, String.Format("{0}_{1}", NugetReleaseName, NugetPackageName.Replace(" ", "_")), NugetPackageName.Replace(" ", "_")),
              NuGetPackageIconUrl,
              NugetReleaseName, depDependencyString)]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Set Spec File Path" sap:VirtualizedContainerService.HintSize="242,57">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[NugetSpecFilePath]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[Path.Combine(NugetWorkingPath, "Package.nuspec")]</InArgument>
              </Assign.Value>
            </Assign>
            <taf:WriteToFile AutoNewLine="{x:Null}" Content="[NugetSpecFileContent]" Create="True" FileName="[NugetSpecFilePath]" sap:VirtualizedContainerService.HintSize="242,22" />
            <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="242,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[String.Format(&quot;Created nuspec file at {0}&quot;, NugetSpecFilePath)]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
            <mtbwa:InvokeProcess Arguments="[String.Format(&quot;pack &quot;&quot;{0}&quot;&quot; -Version &quot;&quot;{1}&quot;&quot; -OutputDirectory &quot;&quot;{2}&quot;&quot;&quot;, NugetSpecFilePath, NugetPackageVersion, NugetWorkingPath)]" FileName="[NuGetExePathOnBuildServer]" sap:VirtualizedContainerService.HintSize="234,217">
              <mtbwa:InvokeProcess.ErrorDataReceived>
                <ActivityAction x:TypeArguments="x:String">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:String" Name="errOutput" />
                  </ActivityAction.Argument>
                  <mtbwa:WriteBuildError sap:VirtualizedContainerService.HintSize="200,22" Message="[errOutput]" />
                </ActivityAction>
              </mtbwa:InvokeProcess.ErrorDataReceived>
              <mtbwa:InvokeProcess.OutputDataReceived>
                <ActivityAction x:TypeArguments="x:String">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:String" Name="stdOutput" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Publish Package" sap:VirtualizedContainerService.HintSize="200,49">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="200,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[stdOutput]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                    <taf:RoboCopy FailBuildOnError="{x:Null}" IgnoreExceptions="{x:Null}" LogToBuild="{x:Null}" Options="{x:Null}" ReturnCode="{x:Null}" TreatWarningsAsErrors="{x:Null}" Action="Copy" Destination="[NugetServerPackagePath]" DisplayName="Copy NuGet Package" Files="*.nupkg" sap:VirtualizedContainerService.HintSize="200,22" LogExceptionStack="True" Source="[NugetWorkingPath]" />
                  </Sequence>
                </ActivityAction>
              </mtbwa:InvokeProcess.OutputDataReceived>
            </mtbwa:InvokeProcess>
          </Sequence>
        </If.Then>
        <If.Else>
          <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="220,100" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[String.Format(&quot;Not publishing the NuGet Package. PublishPackageValue = {0} and BuildReasonValue = {1}&quot;, PublishNuGetPackages, BuildDetail.Reason.ToString())]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
        </If.Else>
      </If>
    </Sequence>
    <Sequence DisplayName="Publish Latest Packages" sap:VirtualizedContainerService.HintSize="486,49">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Default="[BuildDetail.BuildDefinition.Name]" Name="BuildName" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If Condition="[String.IsNullOrEmpty(PublishLatestPackagesPath) = False And String.IsNullOrEmpty(PublishLatestFilterExpressions) = False]" sap:VirtualizedContainerService.HintSize="464,584">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence DisplayName="Move the output to Latest" sap:VirtualizedContainerService.HintSize="231,483">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="200,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="Inside copy to latest" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
            <mtbwa:DeleteDirectory Directory="[Path.Combine(PublishLatestPackagesPath, BuildName)]" sap:VirtualizedContainerService.HintSize="200,22" />
            <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="200,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[String.Concat(&quot;Delete the directory&quot;, Path.Combine(PublishLatestPackagesPath, BuildName))]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
            <taf:RoboCopy FailBuildOnError="{x:Null}" IgnoreExceptions="{x:Null}" LogToBuild="{x:Null}" ReturnCode="{x:Null}" TreatWarningsAsErrors="{x:Null}" Action="Copy" Destination="[Path.Combine(PublishLatestPackagesPath, BuildName)]" Files="[PublishLatestFilterExpressions]" sap:VirtualizedContainerService.HintSize="200,22" LogExceptionStack="True" Options="/S" Source="[BuildDetail.DropLocation]" />
            <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="200,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[String.Format(&quot;Copied from {0} to {1}&quot;, BuildDetail.DropLocation, Path.Combine(PublishLatestPackagesPath, BuildName))]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
            <If Condition="[ShouldCopyARRScripts]" DisplayName="If CopyARRScripts" sap:VirtualizedContainerService.HintSize="200,49">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <taf:RoboCopy FailBuildOnError="{x:Null}" IgnoreExceptions="{x:Null}" LogToBuild="{x:Null}" ReturnCode="{x:Null}" TreatWarningsAsErrors="{x:Null}" Action="Copy" Destination="[Path.Combine(PublishLatestPackagesPath, BuildName + &quot;\ARR Scripts&quot;)]" DisplayName="RoboCopy ARR Scripts to Latest" Files="*.*" sap:VirtualizedContainerService.HintSize="269,100" LogExceptionStack="True" Options="/S /A-:R" Source="[BuildDetail.DropLocation + &quot;\ARR Scripts&quot;]" />
              </If.Then>
            </If>
          </Sequence>
        </If.Then>
        <If.Else>
          <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="208,483" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="No value specified in argument PublishLatestPackagesPath or PublishLatestFilterExpression" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
        </If.Else>
      </If>
    </Sequence>
  </Sequence>
</Activity>